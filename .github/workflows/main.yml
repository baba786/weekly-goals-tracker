name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  quality:
    name: Quality Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Check code formatting
        run: npx prettier --check "src/**/*.{js,jsx,ts,tsx}"

      - name: Lint check
        run: npx eslint "src/**/*.{js,jsx,ts,tsx}"

  build:
    name: Build
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: dist/

      - name: Check build size
        run: |
          echo "ðŸ“¦ Build size:"
          du -sh dist/

  preview:
    name: Preview Deployment
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: dist

      - name: Deploy to Netlify (Preview)
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './dist'
          deploy-message: "Deploy Preview for PR ${{ github.event.number }}"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-pull-request-comment: true
          enable-commit-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        if: env.NETLIFY_AUTH_TOKEN != null